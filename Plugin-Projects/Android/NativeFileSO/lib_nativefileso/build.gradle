apply plugin: 'com.android.library'

android {
    namespace "com.keiwando.lib_nativefileso"
    compileSdkVersion 35

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    afterEvaluate {
        assembleDebug.finalizedBy(exportJar)
    }
}

dependencies {
    //implementation fileTree(include: ['*.jar'], dir: 'libs')
    //implementation 'com.android.support:support-v4:28.1.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task exportJar(type: Copy) {
    from('build/outputs/aar/lib_nativefileso-debug.aar')
    into('../../../../Assets/Plugins/NativeFileSO/Android')
    rename('lib_nativefileso-debug.aar', 'NativeFileSO.aar')
}

task deleteOldJar(type: Delete) {

    delete '../../../../Assets/Plugins/NativeFileSO/Android/NativeFileSO.aar'
}
exportJar.dependsOn(deleteOldJar)

//task deleteMeta(type: Delete) {

//    delete fileTree('src') {
//        include '**/*.meta'
//    }

//    delete fileTree('build') {
//        include '**/*.meta'
//    }
//}

//preBuild.dependsOn(deleteMeta)

//task deleteReports(type: Delete) {
//    delete testReportDir
//    delete testResultsDir

//    delete fileTree('reports/tests') {
//        include '**/**'
//    }
//}

//exportJar.dependsOn(deleteReports)
